version: 2
jobs:
  build:
    parallelism: 1
    working_directory: ~/allocation-manager
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          RAILS_ENV: test
          RACK_ENV: test
    steps:
      - checkout
      - run:
          name: Which bundler?
          command: bundle -v
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - run:
          name: Install GOV.UK frontend modules
          command: npm install
      - restore_cache:
          keys:
            - allocation-manager-v1-{{ checksum "Gemfile.lock" }}
            - allocation-manager-v1-
      - run: gem install did_you_mean -v 1.2.1
      - run: bundle check --path vendor/bundle || bundle install --path vendor/bundle
      - save_cache:
          key: allocation-manager-v1-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: install firefox
          command: |
            if [[ $(command -v firefox) ]] && [[ $(firefox --version) == "Mozilla Firefox $FIREFOX_VERSION" ]]; then
              echo "Skiping, Firefox $FIREFOX_VERSION already install."
            else
                wget -L "https://ftp.mozilla.org/pub/firefox/releases/$FIREFOX_VERSION/linux-x86_64/en-US/firefox-$FIREFOX_VERSION.tar.bz2" -O "firefox-$FIREFOX_VERSION.tar.bz2"
              sudo tar xjf "firefox-$FIREFOX_VERSION.tar.bz2" -C /opt
            fi
            [[ -L /usr/local/bin/firefox ]] || sudo ln -sf /opt/firefox/firefox /usr/bin/firefox
      - run:
          name: install geckodriver
          command: |
            if [[ $(command -v geckodriver) ]] && [[ $(geckodriver --version) =~ $GECKODRIVER_VERSION  ]]; then
              echo "Skiping, geckodriver $GECKODRIVER_VERSION already install."
            else
              wget https://github.com/mozilla/geckodriver/releases/download/v0.19.0/geckodriver-v0.19.0-linux64.tar.gz
              sudo tar -zxvf geckodriver-v0.19.0-linux64.tar.gz -C /opt
            fi
            [[ -L /usr/local/bin/geckodriver ]] || sudo ln -sf /opt/geckodriver /usr/local/bin/geckodriver
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run tests
          command: |
            ./cc-test-reporter before-build
            bundle exec rake
            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?
      - store_test_results:
          path: coverage
      - store_artifacts:
          path: coverage
